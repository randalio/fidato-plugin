{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://fidato-wealth/webpack/bootstrap","webpack://fidato-wealth/webpack/runtime/make namespace object","webpack://fidato-wealth/./src/js/main.js","webpack://fidato-wealth/./src/scss/main.scss?7131"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Add your JavaScript code here\nclass FidatoPluginJS {\n\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        // wait until DOM is ready\n        document.addEventListener(\"DOMContentLoaded\", function(event){\n            console.log(\"DOM loaded\");\n\n            // add animation to all dividers\n            const dividers = document.querySelectorAll('.elementor-widget-divider');\n            for (let i = 0; i < dividers.length; i++) {\n                // Access each element using elements[i]\n                dividers[i].setAttribute('data-scroll', '');\n                dividers[i].setAttribute('data-scroll-repeat', '');\n                dividers[i].setAttribute('data-scroll-class', 'loco-in-view');\n            }\n\n\n            //wait until images, links, fonts, stylesheets, and js is loaded\n            window.addEventListener(\"load\", function(e){    \n                console.log(\"window loaded\");\n                \n                let scroll = null;\n                \n                // Initialize Locomotive Scroll\n                scroll = new LocomotiveScroll({\n                    el: document.querySelector('[data-scroll-container]'),\n                    smooth: true,\n                    multiplier: 1,\n                    class: 'loco-in-view',\n                    lerp: 0.05,\n                });\n\n                // Keep a reference to scrollTop outside of the event handlers\n                let scrollTop = 0;\n                scroll.on('scroll', (obj) => {\n                    // Current vertical scroll position\n                    scrollTop = obj.scroll.y;\n                });\n\n                // Initialize the Swiper with proper configuration to avoid scroll conflicts\n\n\n                // Initialize the Swiper with proper configuration to avoid scroll conflicts\n                var overflowSwiper = new Swiper('.overflowSwiper', {\n                    slidesPerView: 1.33,\n                    centeredSlides: true,\n                    loop: false,\n                    speed: 500,\n                    spaceBetween: 36,\n                    mousewheel: false,\n                    keyboard: {\n                        enabled: true,\n                        onlyInViewport: true,\n                    },\n                    navigation: {\n                        nextEl: '.overflow-swiper-button-next',\n                        prevEl: '.overflow-swiper-button-prev',\n                    },\n                    breakpoints: {\n                        768: {\n                            centeredSlides: false,\n                            slidesPerView: 2,\n                        },\n                        1024: {\n                            centeredSlides: false,\n                            slidesPerView: 3,\n                        }\n                    },\n                    // on: {\n                    //     // Important: Update Locomotive Scroll after swiper events\n                    //     slideChangeTransitionEnd: function() {\n                    //         if (scroll) {\n                    //             // Force Locomotive Scroll to update\n                    //             scroll.update();\n                    //         }\n                    //     },\n                    //     touchEnd: function() {\n                    //         if (scroll) {\n                    //             // Make sure Locomotive Scroll is updated after touch interactions\n                    //             setTimeout(() => {\n                    //                 scroll.update();\n                    //             }, 100);\n                    //         }\n                    //     }\n                    // }\n                });\n\n                var blueNumericSwiper = new Swiper('.blueNumericSwiper', {\n                    slidesPerView: 1.33,\n                    centeredSlides: true,\n                    loop: false,\n                    speed: 500,\n                    spaceBetween: 16,\n                    mousewheel: false,\n                    keyboard: {\n                        enabled: true,\n                        onlyInViewport: true,\n                    },\n                    navigation: {\n                        nextEl: '.blue-numeric-swiper-button-next',\n                        prevEl: '.blue-numeric-swiper-button-prev',\n                    },\n                    breakpoints: {\n                        768: {\n                            slidesPerView: 2,\n                            centeredSlides: false,\n                            spaceBetween: 36,\n                        },\n                        1024: {\n                            slidesPerView: 3,\n                            centeredSlides: false,\n                            spaceBetween: 36,\n                        }\n                    },\n                    // on: {\n                    //     // Important: Update Locomotive Scroll after swiper events\n                    //     slideChangeTransitionEnd: function() {\n                    //         if (scroll) {\n                    //             // Force Locomotive Scroll to update\n                    //             scroll.update();\n                    //         }\n                    //     },\n                    //     touchEnd: function() {\n                    //         if (scroll) {\n                    //             // Make sure Locomotive Scroll is updated after touch interactions\n                    //             setTimeout(() => {\n                    //                 scroll.update();\n                    //             }, 100);\n                    //         }\n                    //     }\n                    // }\n                });\n\n                var blueValuesSwiper = new Swiper('.blueValuesSwiper', {\n                    slidesPerView: 1.33,\n                    centeredSlides: true,\n                    loop: false,\n                    speed: 500,\n                    spaceBetween: 16,\n                    mousewheel: false,\n                    keyboard: {\n                        enabled: true,\n                        onlyInViewport: true,\n                    },\n                    navigation: {\n                        nextEl: '.blue-values-swiper-button-next',\n                        prevEl: '.blue-values-swiper-button-prev',\n                    },\n                    breakpoints: {\n                        768: {\n                            slidesPerView: 2,\n                            centeredSlides: false,\n                            spaceBetween: 36,\n                        },\n                        1024: {\n                            slidesPerView: 3,\n                            centeredSlides: false,\n                            spaceBetween: 36,\n                        }\n                    },\n                });\n\n                var learningCenterSwiper = new Swiper('.learningCenterSwiper', {\n                    slidesPerView: 1,\n                    centeredSlides: false,\n                    loop: false,\n                    speed: 500,\n                    spaceBetween: 36,\n                    mousewheel: false,\n                    keyboard: {\n                        enabled: true,\n                        onlyInViewport: true,\n                    },\n                    navigation: {\n                        nextEl: '.learning-center-swiper-button-next',\n                        prevEl: '.learning-center-swiper-button-prev',\n                    },\n\n                });\n                \n                // Update Locomotive Scroll after Swiper initialization\n                setTimeout(() => {\n                    if (scroll) {\n                        scroll.update();\n                    }\n                }, 500);\n\n                if( document.querySelectorAll('.team-carousel').length ){\n\n                    // Initialize the Swiper with proper configuration to avoid jump on loop\n                    var teamSwiper = new Swiper('.teamSwiper', {\n                        slidesPerView: 1.5,\n                        loop: true,\n                        speed: 750, // Match your CSS transition speed\n                        centeredSlides: true,\n                        spaceBetween: 32,\n                        mousewheel: false,\n                        keyboard: {\n                        enabled: true,\n                        onlyInViewport: true,\n                        },\n                        navigation: {\n                        nextEl: '.team-swiper-button-next',\n                        prevEl: '.team-swiper-button-prev',\n                        },\n                        breakpoints: {\n                        768: {\n                            slidesPerView: 2,\n                            spaceBetween: 44,\n                            centeredSlides: true,\n                        },\n                        1024: {\n                            slidesPerView: 3,\n                            spaceBetween: 100,\n                            centeredSlides: false,\n                        }\n                        },\n                        // These are the key fixes for smooth looping\n                        loopAdditionalSlides: 5, // Add more cloned slides\n                        loopedSlides: 5,         // Number of looped slides\n                        // This is critical for smooth animation\n                        allowTouchMove: false,   // Disable touch movement to prevent jump issues\n                        on: {\n                        // Important: Update Locomotive Scroll after swiper events\n                        slideChangeTransitionEnd: function() {\n                            if (scroll) {\n                            // Force Locomotive Scroll to update\n                            scroll.update();\n                            }\n                        },\n                        touchEnd: function() {\n                            if (scroll) {\n                            // Make sure Locomotive Scroll is updated after touch interactions\n                            setTimeout(() => {\n                                scroll.update();\n                            }, 100);\n                            }\n                        }\n                        }\n                    });\n                    \n                    // If you need touch movement, add this to handle navigation via buttons only:\n                    document.querySelector('.team-swiper-button-next').addEventListener('click', () => {\n                        teamSwiper.slideNext();\n                    });\n                    document.querySelector('.team-swiper-button-prev').addEventListener('click', () => {\n                        teamSwiper.slidePrev();\n                    });\n\n                    // Select all link elements within swiper-slide elements that are inside team-carousel\n                    document.querySelectorAll('.team-carousel .swiper-slide .link').forEach(link => {\n                        // Add click event listener to each link\n                        link.addEventListener('click', function(e) {\n                            e.preventDefault();\n                            \n                            const linkHref = this.getAttribute('href').toString();\n                            document.querySelector(linkHref).classList.add('active');\n                            console.log(linkHref);\n                            const teamPanelOverlay = document.querySelector('.panel-container');\n\n                            if (scroll) {\n                                scroll.stop();\n                            }\n\n                            teamPanelOverlay.classList.add('active');\n                            teamPanelOverlay.style.top = scrollTop + 'px';\n                        });\n                    });\n\n                    // Make sure all close/overlay click handlers properly restart Locomotive Scroll\n                    document.querySelector('.team-panel--header .close').addEventListener('click', function() {\n                        const teamPanelOverlay = document.querySelector('.panel-container');\n\n                        teamPanelOverlay.classList.remove('active');\n                        document.querySelectorAll('.team-panel--content').forEach(panel => {\n                            panel.classList.remove('active');\n                        });\n\n                        if (scroll) {\n                            scroll.start();\n                            \n                            // Force update after starting\n                            setTimeout(() => {\n                                scroll.update();\n                            }, 100);\n                        }\n                    });\n\n                    document.querySelector('.team-panel--overlay').addEventListener('click', function() {\n                        console.log('overlay clicked');\n                        const teamPanelOverlay = document.querySelector('.panel-container');\n\n                        teamPanelOverlay.classList.remove('active');\n                        document.querySelectorAll('.team-panel--content').forEach(panel => {\n                            panel.classList.remove('active');\n                        });\n                        \n                        if (scroll) {\n                            scroll.start();\n                            \n                            // Force update after starting\n                            setTimeout(() => {\n                                scroll.update();\n                            }, 100);\n                        }\n                    });\n\n                    // Add event listeners to handle resize events\n                    window.addEventListener('resize', function() {\n                        if (scroll) {\n                            // Force Locomotive Scroll update on window resize\n                            setTimeout(() => {\n                                scroll.update();\n                            }, 100);\n                        }\n                    });\n\n                    // Ensure Locomotive Scroll continues to work when interacting with the Swiper\n                    const teamCarousel = document.querySelector('.team-carousel');\n                    if (teamCarousel) {\n                        // When mouse enters the carousel, make sure scroll isn't stopped\n                        teamCarousel.addEventListener('mouseenter', function() {\n                            if (scroll && !document.querySelector('.panel-container.active')) {\n                                scroll.update();\n                            }\n                        });\n                        \n                        // When mouse leaves the carousel, make sure scroll is working\n                        teamCarousel.addEventListener('mouseleave', function() {\n                            if (scroll && !document.querySelector('.panel-container.active')) {\n                                scroll.update();\n                            }\n                        });\n                    }\n\n                }\n\n                // if( document.querySelectorAll('.fidato--resource-card.videos').length ){\n                //     //console.log(document.querySelectorAll('.fidato--resource-card.videos').length);\n\n                //     // First, let's create the play button element\n                //     const playButton = document.createElement('div');\n                //     playButton.className = 'play-button';\n                //     playButton.style.position = 'absolute'; // Changed from 'fixed' to 'absolute'\n                //     playButton.style.pointerEvents = 'none';\n                //     playButton.style.opacity = '0';\n                //     playButton.style.zIndex = '1000';\n                //     playButton.style.pointerEvents = 'none';\n                //     playButton.style.transition = 'left 0.15s ease-out, top 0.15s ease-out, opacity 0.5s ease'; // Add smooth transition\n\n                //     // You can add styling to the play button\n                //     playButton.innerHTML = `\n                //     <span>Click To Play</span>\n                //     `;\n\n                //     // Append the play button to the learning-center-carousel\n                //     const carousel = document.querySelector('.learning-center-carousel');\n                //         if (carousel) {\n                //             carousel.appendChild(playButton);\n                //             // Make sure the carousel has position relative or absolute for proper positioning\n                //             const carouselPosition = window.getComputedStyle(carousel).position;\n\n                //             if (carouselPosition === 'static') {\n                //                 carousel.style.position = 'relative';\n                //             }\n                //     } else {\n                //         document.body.appendChild(playButton);\n                //     }\n\n                //     // Variable to store the timeout ID\n                //     let moveTimeout;\n\n                //     // Add event listeners to video elements\n                //     const videos = document.querySelectorAll('.fidato--resource-card.videos');\n                //     for (let i = 0; i < videos.length; i++) {\n                //     videos[i].addEventListener('mouseover', function(event) {\n                //         // Get mouse position relative to the carousel\n                //         const rect = carousel.getBoundingClientRect();\n                //         const x = event.clientX - rect.left;\n                //         const y = event.clientY - rect.top;\n\n                //         if( videos[i].classList.contains('featured') ){\n                //             playButton.classList.add('featured');\n                //         }else{\n                //             playButton.classList.remove('featured');\n                //         }\n\n                        \n                //         // Position the play button at the cursor location immediately on hover\n                //         playButton.style.left = (x - 20) + 'px';\n                //         playButton.style.top = (y - 20) + 'px';\n                        \n                //         // Make the play button visible\n                //         playButton.style.opacity = '1';\n                //     });\n                    \n                //     // Track mouse movement while hovering over the video\n                //     videos[i].addEventListener('mousemove', function(event) {\n                //         // Clear any existing timeout\n                //         clearTimeout(moveTimeout);\n                        \n                //         // Create a new timeout to delay the position update\n                //         moveTimeout = setTimeout(() => {\n                //         // Get mouse position relative to the carousel\n                //         const rect = carousel.getBoundingClientRect();\n                //         const x = event.clientX - rect.left;\n                //         const y = event.clientY - rect.top;\n                        \n                //         // Update the play button position\n                //         playButton.style.left = (x - 20) + 'px';\n                //         playButton.style.top = (y - 20) + 'px';\n                //         }, 7); // 80ms delay (about 4-5 frames at 60fps)\n                //     });\n                    \n                //     // Hide the play button when mouse leaves the video card\n                //     videos[i].addEventListener('mouseout', function() {\n                //         // Clear any pending timeout\n                //         clearTimeout(moveTimeout);\n                        \n                //         // Hide the play button\n                //         playButton.style.opacity = '0';\n                //     });\n                //     }\n\n\n\n\n\n                // }\n            \n\n\n            }, false);\n        });\n    }\n}\n\nnew FidatoPluginJS();\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["FidatoPluginJS","_classCallCheck","init","_createClass","key","value","document","addEventListener","event","console","log","dividers","querySelectorAll","i","length","setAttribute","window","e","scroll","LocomotiveScroll","el","querySelector","smooth","multiplier","lerp","scrollTop","on","obj","y","overflowSwiper","Swiper","slidesPerView","centeredSlides","loop","speed","spaceBetween","mousewheel","keyboard","enabled","onlyInViewport","navigation","nextEl","prevEl","breakpoints","blueNumericSwiper","blueValuesSwiper","learningCenterSwiper","setTimeout","update","teamSwiper","loopAdditionalSlides","loopedSlides","allowTouchMove","slideChangeTransitionEnd","touchEnd","slideNext","slidePrev","forEach","link","preventDefault","linkHref","getAttribute","toString","classList","add","teamPanelOverlay","stop","style","top","remove","panel","start","teamCarousel"],"sourceRoot":""}