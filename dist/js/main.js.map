{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://fidato-wealth/./src/js/main.js"],"sourcesContent":["// Add your JavaScript code here\nclass FidatoPluginJS {\n\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        // wait until DOM is ready\n        document.addEventListener(\"DOMContentLoaded\", function(event){\n            console.log(\"DOM loaded\");\n\n            // add animation to all dividers\n            const dividers = document.querySelectorAll('.elementor-widget-divider');\n            for (let i = 0; i < dividers.length; i++) {\n                // Access each element using elements[i]\n                dividers[i].setAttribute('data-scroll', '');\n                dividers[i].setAttribute('data-scroll-repeat', '');\n                dividers[i].setAttribute('data-scroll-class', 'loco-in-view');\n            }\n\n\n            //wait until images, links, fonts, stylesheets, and js is loaded\n            window.addEventListener(\"load\", function(e){    \n                console.log(\"window loaded\");\n                \n                let scroll = null;\n                \n                // Initialize Locomotive Scroll\n                scroll = new LocomotiveScroll({\n                    el: document.querySelector('[data-scroll-container]'),\n                    smooth: true,\n                    multiplier: 1,\n                    class: 'loco-in-view',\n                    lerp: 0.1\n                });\n\n                // Keep a reference to scrollTop outside of the event handlers\n                let scrollTop = 0;\n                scroll.on('scroll', (obj) => {\n                    // Current vertical scroll position\n                    scrollTop = obj.scroll.y;\n                });\n\n                // Initialize the Swiper with proper configuration to avoid scroll conflicts\n                var teamSwiper = new Swiper('.teamSwiper', {\n                    slidesPerView: 1.5,\n                    centeredSlides: true,\n                    loop: true,\n                    speed: 500,\n                    spaceBetween: 72,\n                    mousewheel: false,\n                    keyboard: {\n                        enabled: true,\n                        onlyInViewport: true,\n                    },\n                    navigation: {\n                        nextEl: '.team-swiper-button-next',\n                        prevEl: '.team-swiper-button-prev',\n                    },\n                    breakpoints: {\n                        768: {\n                            slidesPerView: 2,\n                        },\n                        1024: {\n                            slidesPerView: 3,\n                        }\n                    },\n                    on: {\n                        // Important: Update Locomotive Scroll after swiper events\n                        slideChangeTransitionEnd: function() {\n                            if (scroll) {\n                                // Force Locomotive Scroll to update\n                                scroll.update();\n                            }\n                        },\n                        touchEnd: function() {\n                            if (scroll) {\n                                // Make sure Locomotive Scroll is updated after touch interactions\n                                setTimeout(() => {\n                                    scroll.update();\n                                }, 100);\n                            }\n                        }\n                    }\n                });\n\n                // Initialize the Swiper with proper configuration to avoid scroll conflicts\n                var overflowSwiper = new Swiper('.overflowSwiper', {\n                    slidesPerView: 1.33,\n                    centeredSlides: true,\n                    loop: false,\n                    speed: 500,\n                    spaceBetween: 36,\n                    mousewheel: false,\n                    keyboard: {\n                        enabled: true,\n                        onlyInViewport: true,\n                    },\n                    navigation: {\n                        nextEl: '.overflow-swiper-button-next',\n                        prevEl: '.overflow-swiper-button-prev',\n                    },\n                    breakpoints: {\n                        768: {\n                            centeredSlides: false,\n                            slidesPerView: 2,\n                        },\n                        1024: {\n                            centeredSlides: false,\n                            slidesPerView: 3,\n                        }\n                    },\n                    // on: {\n                    //     // Important: Update Locomotive Scroll after swiper events\n                    //     slideChangeTransitionEnd: function() {\n                    //         if (scroll) {\n                    //             // Force Locomotive Scroll to update\n                    //             scroll.update();\n                    //         }\n                    //     },\n                    //     touchEnd: function() {\n                    //         if (scroll) {\n                    //             // Make sure Locomotive Scroll is updated after touch interactions\n                    //             setTimeout(() => {\n                    //                 scroll.update();\n                    //             }, 100);\n                    //         }\n                    //     }\n                    // }\n                });\n\n                var blueNumericSwiper = new Swiper('.blueNumericSwiper', {\n                    slidesPerView: 1.33,\n                    centeredSlides: true,\n                    loop: false,\n                    speed: 500,\n                    spaceBetween: 16,\n                    mousewheel: false,\n                    keyboard: {\n                        enabled: true,\n                        onlyInViewport: true,\n                    },\n                    navigation: {\n                        nextEl: '.blue-numeric-swiper-button-next',\n                        prevEl: '.blue-numeric-swiper-button-prev',\n                    },\n                    breakpoints: {\n                        768: {\n                            slidesPerView: 2,\n                            centeredSlides: false,\n                            spaceBetween: 36,\n                        },\n                        1024: {\n                            slidesPerView: 3,\n                            centeredSlides: false,\n                            spaceBetween: 36,\n                        }\n                    },\n                    // on: {\n                    //     // Important: Update Locomotive Scroll after swiper events\n                    //     slideChangeTransitionEnd: function() {\n                    //         if (scroll) {\n                    //             // Force Locomotive Scroll to update\n                    //             scroll.update();\n                    //         }\n                    //     },\n                    //     touchEnd: function() {\n                    //         if (scroll) {\n                    //             // Make sure Locomotive Scroll is updated after touch interactions\n                    //             setTimeout(() => {\n                    //                 scroll.update();\n                    //             }, 100);\n                    //         }\n                    //     }\n                    // }\n                });\n                \n                // Update Locomotive Scroll after Swiper initialization\n                setTimeout(() => {\n                    if (scroll) {\n                        scroll.update();\n                    }\n                }, 500);\n\n                // Select all link elements within swiper-slide elements that are inside team-carousel\n                document.querySelectorAll('.team-carousel .swiper-slide .link').forEach(link => {\n                    // Add click event listener to each link\n                    link.addEventListener('click', function(e) {\n                        e.preventDefault();\n                        \n                        const linkHref = this.getAttribute('href').toString();\n                        document.querySelector(linkHref).classList.add('active');\n                        console.log(linkHref);\n                        const teamPanelOverlay = document.querySelector('.panel-container');\n\n                        if (scroll) {\n                            scroll.stop();\n                        }\n\n                        teamPanelOverlay.classList.add('active');\n                        teamPanelOverlay.style.top = scrollTop + 'px';\n                    });\n                });\n\n                // Make sure all close/overlay click handlers properly restart Locomotive Scroll\n                document.querySelector('.team-panel--header .close').addEventListener('click', function() {\n                    const teamPanelOverlay = document.querySelector('.panel-container');\n\n                    teamPanelOverlay.classList.remove('active');\n                    document.querySelectorAll('.team-panel--content').forEach(panel => {\n                        panel.classList.remove('active');\n                    });\n\n                    if (scroll) {\n                        scroll.start();\n                        \n                        // Force update after starting\n                        setTimeout(() => {\n                            scroll.update();\n                        }, 100);\n                    }\n                });\n\n                document.querySelector('.team-panel--overlay').addEventListener('click', function() {\n                    console.log('overlay clicked');\n                    const teamPanelOverlay = document.querySelector('.panel-container');\n\n                    teamPanelOverlay.classList.remove('active');\n                    document.querySelectorAll('.team-panel--content').forEach(panel => {\n                        panel.classList.remove('active');\n                    });\n                    \n                    if (scroll) {\n                        scroll.start();\n                        \n                        // Force update after starting\n                        setTimeout(() => {\n                            scroll.update();\n                        }, 100);\n                    }\n                });\n\n                // Add event listeners to handle resize events\n                window.addEventListener('resize', function() {\n                    if (scroll) {\n                        // Force Locomotive Scroll update on window resize\n                        setTimeout(() => {\n                            scroll.update();\n                        }, 100);\n                    }\n                });\n\n                // Ensure Locomotive Scroll continues to work when interacting with the Swiper\n                const teamCarousel = document.querySelector('.team-carousel');\n                if (teamCarousel) {\n                    // When mouse enters the carousel, make sure scroll isn't stopped\n                    teamCarousel.addEventListener('mouseenter', function() {\n                        if (scroll && !document.querySelector('.panel-container.active')) {\n                            scroll.update();\n                        }\n                    });\n                    \n                    // When mouse leaves the carousel, make sure scroll is working\n                    teamCarousel.addEventListener('mouseleave', function() {\n                        if (scroll && !document.querySelector('.panel-container.active')) {\n                            scroll.update();\n                        }\n                    });\n                }\n            }, false);\n        });\n    }\n}\n\nnew FidatoPluginJS();\n\n// // Add your JavaScript code here\n// class FidatoPluginJS {\n\n//     constructor() {\n//         this.init();\n//     }\n\n//     init() {\n//         // wait until DOM is ready\n\n//         document.addEventListener(\"DOMContentLoaded\", function(event){\n//         console.log(\"DOM loaded\");\n\n//             // add animation to all dividers\n//             const dividers = document.querySelectorAll('.elementor-widget-divider');\n//             for (let i = 0; i < dividers.length; i++) {\n//                 // Access each element using elements[i]\n//                 dividers[i].setAttribute('data-scroll', '');\n//                 dividers[i].setAttribute('data-scroll-repeat', '');\n//                 dividers[i].setAttribute('data-scroll-class', 'loco-in-view');\n//             }\n\n\n//             //wait until images, links, fonts, stylesheets, and js is loaded\n//             window.addEventListener(\"load\", function(e){    \n//             console.log(\"window loaded\");\n\n//                 const scroll = new LocomotiveScroll({\n//                     el: document.querySelector('[data-scroll-container]'),\n//                     smooth: true,\n//                     multiplier: 1,\n//                     class: 'loco-in-view',\n//                     lerp: 0.1\n//                 });\n\n\n\n//                 // Initialize the main Swiper with the same navigation buttons\n//                 var teamSwiper = new Swiper('.teamSwiper', {\n//                     slidesPerView: 1.5,\n//                     centeredSlides: true,\n//                     loop: true,\n//                     speed: 500,\n//                     spaceBetween: 72,\n//                     navigation: {\n//                         nextEl: '.team-swiper-button-next',\n//                         prevEl: '.team-swiper-button-prev',\n//                     },\n//                     breakpoints: {\n//                         768: {\n//                             slidesPerView: 2,\n//                         },\n//                         1024: {\n//                             slidesPerView: 3,\n//                         }\n//                     }\n//                 });\n//                 let scrollTop = 0;\n//                 scroll.on('scroll', (obj) => {\n//                     // Current vertical scroll position\n//                     scrollTop = obj.scroll.y;\n\n//                 });\n\n\n//                 // Select all link elements within swiper-slide elements that are inside team-carousel\n//                 document.querySelectorAll('.team-carousel .swiper-slide .link').forEach(link => {\n//                     // Add click event listener to each link\n//                     link.addEventListener('click', function(e) {\n\n//                         e.preventDefault();\n\n                        \n\n//                         const linkHref = this.getAttribute('href').toString();\n//                         document.querySelector(linkHref).classList.add('active');\n//                         console.log(linkHref);\n//                         const teamPanelOverlay = document.querySelector('.panel-container');\n\n//                         scroll.stop();\n\n//                         teamPanelOverlay.classList.add('active');\n//                         teamPanelOverlay.style.top = scrollTop + 'px';\n\n//                     });\n//                 });\n\n//                 this.document.querySelector('.team-panel--header .close').addEventListener('click', function() {\n//                     const teamPanelOverlay = document.querySelector('.panel-container');\n\n//                     teamPanelOverlay.classList.remove('active');\n//                     document.querySelectorAll('.team-panel--content').forEach(link => {\n//                         link.classList.remove('active');\n//                     });\n\n//                     scroll.start();\n\n//                 });\n\n//                 this.document.querySelector('.team-panel--overlay').addEventListener('click', function() {\n//                     console.log('overlay clicked');\n//                     const teamPanelOverlay = document.querySelector('.panel-container');\n\n//                     teamPanelOverlay.classList.remove('active');\n//                     document.querySelectorAll('.team-panel--content').forEach(link => {\n//                         link.classList.remove('active');\n//                     });\n\n//                     scroll.start();\n\n//                 });\n\n\n\n//             }, false);\n\n  \n//         });\n//     }\n// }\n\n// new FidatoPluginJS();"],"names":["FidatoPluginJS","_classCallCheck","this","init","key","value","document","addEventListener","event","console","log","dividers","querySelectorAll","i","length","setAttribute","window","e","scroll","LocomotiveScroll","el","querySelector","smooth","multiplier","class","lerp","scrollTop","on","obj","y","Swiper","slidesPerView","centeredSlides","loop","speed","spaceBetween","mousewheel","keyboard","enabled","onlyInViewport","navigation","nextEl","prevEl","breakpoints","slideChangeTransitionEnd","update","touchEnd","setTimeout","forEach","link","preventDefault","linkHref","getAttribute","toString","classList","add","teamPanelOverlay","stop","style","top","remove","panel","start","teamCarousel"],"sourceRoot":""}